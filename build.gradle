plugins {
  id 'java'
  id 'org.jastadd' version '1.13.0'
}

defaultTasks 'jar'

if (!file('extendj/jastadd_modules').exists()) {
  throw new GradleException('ExtendJ seems to be missing. Please run "git submodule init", then "git submodule update".')
}

jastadd {
  configureModuleBuild()

  modules {
    include("extendj/jastadd_modules") // Includes the core ExtendJ modules.

    module "extension-base", {
      imports "java8 frontend" // This module depends on "java8 frontend" from ExtendJ.

      java {
        basedir "src/java/"
        include "**/*.java"
      }

      jastadd {
        basedir "src/jastadd/"
        include "**/*.ast"
        include "**/*.jadd"
        include "**/*.jrag"
      }

      //scanner {
      // TODO List your scanner specification additions here.
      //}

      //parser {
      // TODO List your parser specification additions here.
      //}
    }
  }

  // Target module to build:
  module = 'extension-base'

  astPackage = 'org.extendj.ast'
  buildInfoDir = 'src/gen-res'
  parser.name = 'JavaParser'
  scanner.name = 'OriginalScanner'
}

sourceSets.main {
  java {
    srcDir 'extendj/src/frontend-main'
  }
  resources {
    srcDir 'extendj/src/res'
    srcDir jastadd.buildInfoDir
  }
}

jar.manifest.attributes 'Main-Class': 'org.extendj.ExtensionMain'
jar.destinationDir = projectDir

// Java -source and -target version.
sourceCompatibility = targetCompatibility = '1.7'

task sourceZip(type: Zip) {
  description 'Builds a Zip file with the entire repisotory (including the ExtendJ submodule).'
  destinationDir = projectDir
  archiveName = "extension-base.zip"

  from (projectDir) {
    exclude '**/.git'
    exclude '**/.gitignore'
    exclude '**/.gitattributes'
    exclude '**/.gitmodules'
    exclude 'build'
    exclude 'bin'
    exclude '.gradle'
    exclude '.classpath'
    exclude '.settings'
    exclude '.project'
    exclude 'src/gen'
    exclude 'src/gen-res'
    exclude '*.jar'
    exclude '*.zip'
    exclude '**/*.swp'
  }

  into 'extension-base'
}
